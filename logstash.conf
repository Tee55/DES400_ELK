input {
  beats {
    port => 5044
  }

  tcp {
    port => 50000
  }
}

filter {
  # Example group to process JSON messages
    # For A01:2021 T1078
  if [message] =~ /A01/ or
    # For A02:2021 T1552.001
     [message] =~ /A02/ or
    # For A03:2021 T1190
     [message] =~ /A03/ or
    # For A04:2021 T1078
     [message] =~ /A04/ or
     # For A04:2021 T1190
     [message] =~ /A04/ or
    # For A05:2021 T1190
     [message] =~ /A05/ or
    # For A06:2021 T1190
     [message] =~ /A06/ or
    # For A07:2021 T1110.001
     [message] =~ /resourceId/ or
    # For A10:2021 T1071.001
     [message] =~ /A10/ {
    json {
      source => "message"
    }
  }

  # For A08:2021 T1556
  if [message] =~ /Actor/ {
    json {
      source => "message" # Assuming the JSON log is in the "message" field
      target => "parsed_json"
    }

    mutate {
      add_field => {
        "actor_id" => "%{[parsed_json][Actor][0][ID]}"
        "actor_type" => "%{[parsed_json][Actor][0][Type]}"
        "actor_context_id" => "%{[parsed_json][ActorContextId]}"
        "client_ip" => "%{[parsed_json][ClientIP]}"
        "creation_time" => "%{[parsed_json][CreationTime]}"
        "operation" => "%{[parsed_json][Operation]}"
        "result_status" => "%{[parsed_json][ResultStatus]}"
        "application_id" => "%{[parsed_json][ApplicationId]}"
        "user_id" => "%{[parsed_json][UserId]}"
      }
    }
  }

  # For A09:2021 T1562.001
  if [message] =~ /EventTime/ {
    json {
      source => "message"
      target => "parsed_json"
    }

    mutate {
      rename => { "[parsed_json][EventTime]" => "EventTime" }
      rename => { "[parsed_json][Hostname]" => "Hostname" }
      rename => { "[parsed_json][Keywords]" => "Keywords" }
      rename => { "[parsed_json][EventType]" => "EventType" }
      rename => { "[parsed_json][SeverityValue]" => "SeverityValue" }
      rename => { "[parsed_json][Severity]" => "Severity" }
      rename => { "[parsed_json][EventID]" => "EventID" }
      rename => { "[parsed_json][SourceName]" => "SourceName" }
      rename => { "[parsed_json][ProviderGuid]" => "ProviderGuid" }
      rename => { "[parsed_json][Version]" => "Version" }
      rename => { "[parsed_json][Task]" => "Task" }
      rename => { "[parsed_json][OpcodeValue]" => "OpcodeValue" }
      rename => { "[parsed_json][RecordNumber]" => "RecordNumber" }
      rename => { "[parsed_json][ProcessID]" => "ProcessID" }
      rename => { "[parsed_json][ThreadID]" => "ThreadID" }
      rename => { "[parsed_json][Channel]" => "Channel" }
      rename => { "[parsed_json][Domain]" => "Domain" }
      rename => { "[parsed_json][AccountName]" => "AccountName" }
      rename => { "[parsed_json][UserID]" => "UserID" }
      rename => { "[parsed_json][AccountType]" => "AccountType" }
      rename => { "[parsed_json][Message]" => "Message" }
      rename => { "[parsed_json][Category]" => "Category" }
      rename => { "[parsed_json][Opcode]" => "Opcode" }
      rename => { "[parsed_json][UtcTime]" => "UtcTime" }
      rename => { "[parsed_json][SourceProcessGUID]" => "SourceProcessGUID" }
      rename => { "[parsed_json][SourceProcessId]" => "SourceProcessId" }
      rename => { "[parsed_json][SourceThreadId]" => "SourceThreadId" }
      rename => { "[parsed_json][SourceImage]" => "SourceImage" }
      rename => { "[parsed_json][TargetProcessGUID]" => "TargetProcessGUID" }
      rename => { "[parsed_json][TargetProcessId]" => "TargetProcessId" }
      rename => { "[parsed_json][TargetImage]" => "TargetImage" }
      rename => { "[parsed_json][GrantedAccess]" => "GrantedAccess" }
      rename => { "[parsed_json][CallTrace]" => "CallTrace" }
      rename => { "[parsed_json][EventReceivedTime]" => "EventReceivedTime" }
      rename => { "[parsed_json][SourceModuleName]" => "SourceModuleName" }
      rename => { "[parsed_json][SourceModuleType]" => "SourceModuleType" }
    }

    date {
      match => ["EventTime", "yyyy-MM-dd HH:mm:ss"]
      target => "EventTime"
    }

    date {
      match => ["UtcTime", "yyyy-MM-dd HH:mm:ss.SSS"]
      target => "UtcTime"
    }

    mutate {
      convert => {
        "SeverityValue" => "integer"
        "EventID" => "integer"
        "ProcessID" => "integer"
        "ThreadID" => "integer"
        "SourceProcessId" => "integer"
        "TargetProcessId" => "integer"
      }
    }

    grok {
      match => { "GrantedAccess" => "0x%{NUMBER:GrantedAccess}" }
    }
  }

  # Grok for A02:2021 T1003.008 - proctitle extraction
  if [message] =~ /type=PROCTITLE/ {  
    grok {
      match => { "message" => "type=%{WORD:proctitle_type} msg=audit(%{GREEDYDATA:time}): proctitle=%{GREEDYDATA:command}" }
    }
  }

}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "logstash_internal"
    password => "${LOGSTASH_INTERNAL_PASSWORD}"
  }
}
